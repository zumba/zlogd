{"name":"Zlogd","tagline":"Socket server for external apps to ship logs in a non-blocking fashion.","body":"# Zlogd\r\n\r\nLogging server for external apps that communicates over unix sock files.\r\n\r\n## Install\r\n\r\n#### For Typical Usage\r\n\r\n```shell\r\nnpm install -g zlogd\r\ncp /path/to/your/usr/local/bin/zlogd/transports.json-dist /path/to/your/usr/local/bin/zlogd/transports.json\r\n```\r\n\r\n#### For Local Development\r\n\r\n```shell\r\nnpm install zlogd\r\ncp transports.json-dist transports.json\r\n```\r\n\r\n## Configuring\r\n\r\nYou can configure the transports to ship the logs.\r\n\r\nCurrently supported transports:\r\n\r\n* `file` (see [winston file configuration](https://github.com/flatiron/winston/blob/master/docs/transports.md#file-transport))\r\n\r\n```json\r\n{\r\n\t\"type\": \"file\",\r\n\t\"config\": {\r\n\t\t\"filename\": \"/tmp/out.log\" \r\n\t}\r\n}\r\n```\r\n\r\n* `logstash` (see [winston-logstash](https://github.com/jaakkos/winston-logstash))\r\n\r\n```json\r\n{\r\n\t\"type\": \"logstash\",\r\n\t\"config\": {\r\n\t\t\"host\": \"127.0.0.1\",\r\n\t\t\"port\": 28777\r\n\t}\r\n}\r\n```\r\n\r\n## Running\r\n\r\n#### Environment Switches\r\n\r\nSeveral process variables can be set to alter the runtime of Zlogd:\r\n\r\n* `SOCK_FILE` - Path of the unix socket file (default: `/tmp/zlogd.sock`)\r\n* `WORKERS` - Number of workers to use (default: System number of CPUs)\r\n* `STAT_MONITOR` - Should the stat monitor run? (default: `0`)\r\n* `STAT_PULSE` - How often will the stats aggregate/display? (default: `3000` milliseconds)\r\n* `DELIMITER` - What is the delimiter that separates log messages? (default: `;;`)\r\n\r\n#### Command Line Switches\r\n\r\nAs of `0.2.x`, CLI commands are available that can be used in place of environment variables:\r\n\r\n* `-h, --help` - output usage information\r\n* `-V, --version` - output the version number\r\n* `-f, --forground` - Run zlogd in the forground.\r\n* `-w, --workers [number]` - Run zlogd with set number of workers. Defaulting to number of CPUs.\r\n* `-i, --input-socketfile [path]` - Path (/tmp/zlog.sock) to sock file for zlogd to listen.\r\n* `-d, --delimiter [delimiter]` - The delimiter symbol (;;) to indicate to zlogd separate messages per request.\r\n* `-s, --stat-monitor` - Run zlogd with a statmonitor.\r\n* `-p, --stat-pulse [milliseconds]` - Stat monitor pulses at this rate (3000).\r\n\r\nLocal:\r\n\r\n```shell\r\nnpm start\r\n```\r\n\r\nglobal:\r\n\r\n```shell\r\nzlogd\r\n```\r\n\r\nAs of version `0.2.0`, running this process will default to running as a daemon. You can view the processes in linux/mac by doing `ps -A | grep -i zlogd`.\r\n\r\n## Send a Log Message\r\n\r\nHere is an example PHP script sending a log message to zlogd:\r\n\r\n\r\n```php\r\n<?php\r\n\r\n$socket = fsockopen('unix:///tmp/zlog.sock', 0);\r\n$delimiter = ';;';\r\n$packet = json_encode(array(\r\n        'level' => 'debug',\r\n        'message' => 'hello world!'\r\n)) . $delimiter;\r\nfputs($socket, $packet, strlen($packet));\r\n```\r\n\r\n## Todo\r\n\r\n* Add upstart script for managing processes.\r\n* Prevent duplicate runs (possibly generate a lock file and delete on exit).\r\n* Add formal documentation to a `/docs` directory.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}